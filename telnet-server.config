How to assign IPaddress 
RHEL 6            		RHEL 7
network init scripts            NetworkManager service
                                is used to modify ip 	                               configurations
where you modify
configuration files 
manually
                   /etc/sysconfig/network-scripts/*


  Networkmanager
  network service -> init scripts

 NetworkManager 

 nmcli  - cli - command line
 nmtui  - tui - text user interface
 nm-connection-editor -gui - graphical user interface

ip - command

ip addr - shows ip addresses
ip addr show
ip addr show ens9 - shows ip of an interface i.e ens9 in ex:
ip -4 addr show ens9 - only shows ipv4 addresses
ip link - available interface
ip link show dev ens9
ip addr add 200.200.0.22/24 dev ens9
ip addr del 200.200.0.22/24 dev ens9
ip link set ens9 up  -- modify interface status 
ip link set ens9 down - modify interface status
ethtool enp2s0 - check ethernet port connected

using servce network (init scripts)

cd /etc/sysconfig/network-scripts
vi ifcfg-ens9
NAME=ens9-ethernet
TYPE=Ethernet
BOOTPROTO=static  
UUID="xxxxx-xxxxx-xxxx-xxxx-xxxx-xx"
DEVICE=ens9
ONBOOT=yes
IPADDR=200.200.0.25
PREFIX=24
nmcli
NAME - con-name  hello
DEVICE - ifname
TYPE - type
ONBOOT - autoconnect
IPADDR - ipv4.addresses
BOOTPROTO - ipv4.method
PREFIX- ipv4.addresses/24


BOOTPROTO can be
static - fixed ip address 
none - ""
dhcp - ip from dhcpserver

generate uuid -> uuidegen device_name
uuidgen ens9 
Find out how many connections are available for how many devices
nmcli connection show -> all connection lists
or
nmcli connection show connectioname -> about one connection
To delete a connection
nmcli connection delete connectionname -> to delete connection
To list devices (active/inactive)
nmcli device status
nmcli device show

To connect device 
nmcli device connect device_name
nmcli device connect ens9

To disconnect device
nmcli device disconnect device_name
nmcli device disconnect ens9

To create a new connection
nmcli connection add con-name ethernet-ens9 type ethernet ifname ens9 ipv4.method manual ipv4.addresses 200.200.0.23/24 autoconnect yes

to verfiy connection added or not

nmcli connection show

To bring up connection
nmcli connection up connectionname
nmcli connection show
ip -4 addr
verify an equivalent configuration file will be generated in
/etc/sysconfig/network-scripts directory

To modify connnection paramaters 
nmcli connection modify ethernet-ens9 ipv4.addresses 200.200.0.24/24 
nmcli connection up ethernet-ens9
or 
nmcli connection down ethernet-ens9
nmcli connection up ethernet-ens9

to change connection name
nmcli connection modify existing_name con-name new_name

to change onboot status
nmcli connection modify onboot yes
nmcli connection modify onboot no

To keep interfaces with names ethx then,
vi /etc/default/grub
# line 6: add

GRUB_CMDLINE_LINUX="net.ifnames=0
rd.lvm.lv=fedora/swap rd.md=0.....
# apply changing

#grub2-mkconfig -o /boot/grub2/grub.cfg

# reboot 

Remote shell acess 
Telnet
SSH
vsftpd
sftp
scp
Telnet - is a client server application layer protocol that is used to access remote machine.
To configure telnet-server
packages : telnet-server
1. # yum install telnet-server -y
2. # systemctl start telnet.socket 
3. # systemctl enable telnet.socket
create a user
  # useradd sam
  # passwd sam
in telnet client side
packages :telnet-*
1. # yum install telnet -y
or
2. # apt-get install telnet -y (ubuntu)
3. # telnet <serverip>
in case of aws instance
   # telnet <aws-publicip>

firewall configuration in server
-------------------------------------
in case of aws instance an aws firewall restrict the access to instance.
need to edit security groups of an instance
  at the resource groups wizard at left pane under network and security select security groups then select inbound and add a rule you required to add.
for telnet add a rule
 custom tcp  tcp  23  0.0.0.0/24
in physical/local instance
----------------------------
 yum install firewalld -y
 systemctl status firewalld
 systemctl start firewalld
 systemctl status firewalld
 firewall-cmd --list-all
 firewall-cmd --get-services | grep telnet
 firewall-cmd --add-service=telnet  --permanent
 firewall-cmd --reload
 firewall-cmd --list-all

disadvantage of telnet
telnet is insecure -> 
 data over the network in clear text format

enable root login 
simply edit the file /etc/securetty and add the following to the 
end of the file:

pts/0
pts/1
pts/2
pts/3
pts/4
pts/5
pts/6
pts/7
pts/8
pts/9

This will allow up to 10 telnet sessions to the server as root.

Keep in mind that remote root-loing either telnet is a very very very bad idea 
and you're putting your boxes at risk.

To login locally i.e at the server itself
# yum install telnet -y
# telnet localhost 
or 
# telnet 0

--------------------
RHEL -6

# yum install telnet-server xinetd
# yum install telnet -y
# cd /etc/xinetd.d/
# vi telnet
 service telnet
 {
 flags           = REUSE
 socket_type     = stream
 wait            = no
 user            = root
 server          = /usr/sbin/in.telnetd
 log_on_failure  += USERID
 disable         = no
 }
# systemctl start xinetd
# systemctl enable xinetd
# yum install iptables-services
# iptables -A INPUT -p tcp --dport 23 -j ACCEPT
# service iptables save
telnet-client
# telnet serverip
after this everything is same as in redhat 7















  

